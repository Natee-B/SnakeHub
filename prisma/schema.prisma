// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String
  password  String
  email     String     @unique
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  Category  Category[]
  Post      Post[]
}

enum Role {
  USER
  ADMIN
}

model Category {
  id          Int      @id @default(autoincrement())
  speciesName String   @unique
  description String
  img         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  Snake       Snake[]
}

model Snake {
  id          Int      @id @default(autoincrement())
  name        String
  morph       String
  description String
  img         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
  isActive    Boolean  @default(true)
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  img       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}
