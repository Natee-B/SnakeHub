// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  email       String   @unique
  role        Role     @default(USER)
  firstName   String?
  lastName    String?
  city        String?
  address1    String?
  address2    String?
  zipCode     Int?
  phoneNumber Int?
  createdAt   DateTime @default(now())
  Post        Post[]
  Order       Order[]
}

enum Role {
  USER
  ADMIN
}

model Category {
  id          Int      @id @default(autoincrement())
  speciesName String   @unique
  description String?
  img         String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  Snake       Snake[]
  morph       Morph[]
}

model Snake {
  id          Int         @id @default(autoincrement())
  description String?
  price       Int?
  birthdate   DateTime?
  age         Int?
  gender      Gender      @default(UNKNOWN)
  feedingType FeedingType @default(FROZEN)
  img         String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  isActive    Boolean     @default(true)
  recommend   Boolean     @default(false)
  new         Boolean     @default(true)
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  morph       Morph       @relation(fields: [morphId], references: [id])
  order       Order?      @relation(fields: [orderId], references: [id])
  categoryId  Int
  morphId     Int
  orderId     Int?
}

enum FeedingType {
  LIVE
  FROZEN
  THAWED
}

enum Gender {
  MALE
  FEMALE
  UNKNOWN
}

model Morph {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  snake      Snake[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   @db.Text()
  img       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Order {
  id             Int      @id @default(autoincrement())
  quantity       Int      @default(1)
  total          Int // ราคาทั้งหมด
  status         String   @default("PENDING")
  img            String?
  paymentMethod  String? // วิธีการชำระเงิน
  shippingStatus String   @default("PENDING") // (เช่น PENDING, SHIPPED, DELIVERED)
  trackingNumber String? // หมายเลขติดตามพัสดุ
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
  Snake          Snake[]
}
